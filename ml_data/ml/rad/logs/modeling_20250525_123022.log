2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:65 - Initializing modeling with config: {'input': [{'path': './ml_data/breast_cancer_dataset.csv', 'name': None, 'subject_id_col': 'subjID', 'label_col': 'label', 'features': None}], 'output': './ml_data/ml/rad', 'split_method': 'custom', 'test_size': 0.3, 'random_state': 42, 'train_ids_file': './ml_data/train_ids.txt', 'test_ids_file': './ml_data/test_ids.txt', 'normalization': {'method': 'z_score'}, 'feature_selection_methods': [{'method': 'variance', 'params': {'before_z_score': True, 'threshold': 0.2}}, {'method': 'correlation', 'params': {'threshold': 0.75, 'method': 'spearman', 'visualize': False, 'before_z_score': False}}], 'models': {'LogisticRegression': {'params': {'random_state': 42, 'max_iter': 1000, 'C': 1.0, 'penalty': 'l2', 'solver': 'lbfgs'}}, 'SVM': {'params': {'random_state': 42}}, 'XGBoost': {'params': {'random_state': 42, 'n_estimators': 100, 'max_depth': 3, 'learning_rate': 0.1, 'subsample': 0.8, 'colsample_bytree': 0.8, 'objective': 'binary:logistic', 'eval_metric': 'logloss'}}}, 'is_visualize': True, 'is_save_model': True}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:80 - Available feature selectors: ['correlation', 'icc', 'lasso', 'mrmr', 'stepwise', 'rfecv', 'anova', 'chi2', 'variance', 'statistical_test', 'stepwise_r', 'univariate_logistic', 'vif']
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:88 - Modeling initialization completed
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:101 - Reading data from multiple files: 1 files
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:132 - Reading file: ./ml_data/breast_cancer_dataset.csv, Dataset name: None
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:133 - Subject ID column: subjID, Label column: label
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:138 - File loaded with shape: (569, 14)
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:158 - Using label column: label
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:164 - Using subject ID column: subjID
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:210 - Created initial merged dataframe with shape: (569, 12)
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:226 - Adding unified label column: label
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:231 - Final merged dataframe shape: (569, 13) with 12 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:249 - Converting data to numeric types
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:251 - Data converted to numeric types
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:255 - Missing values: label                      0
compactness error          0
concavity error            0
concave points error       0
symmetry error             0
fractal dimension error    0
worst radius               0
worst texture              0
worst perimeter            0
worst area                 0
worst smoothness           0
worst compactness          0
worst fractal dimension    0
dtype: int64
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:258 - Starting data preprocessing
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:259 - Sample size before removing missing values: 569
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:261 - Sample size after removing missing values: 569
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:264 - Data preprocessing completed
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:274 - Splitting data using method: custom
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:312 - Reading custom train IDs from ./ml_data/train_ids.txt
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:389 - Reading subject IDs from file: ./ml_data/train_ids.txt
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:418 - Parsed 300 subject IDs from line-by-line format
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:314 - Read 300 train subject IDs
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:316 - Reading custom test IDs from ./ml_data/test_ids.txt
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:389 - Reading subject IDs from file: ./ml_data/test_ids.txt
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:418 - Parsed 269 subject IDs from line-by-line format
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:318 - Read 269 test subject IDs
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:354 - Custom split completed: train=300, test=269
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:371 - Extracted features and labels: 12 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:429 - Saving train/test split information
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:443 - Split information saved to: ./ml_data/ml/rad\split_info.json
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:375 - Split information saved
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:464 - Checking for feature selection methods to run before normalization
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:489 - Running 1 feature selection methods before normalization
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:493 - Starting with 12 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:501 - Executing variance feature selection before normalization with params: {'before_z_score': True, 'threshold': 0.2}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:522 - variance selected 4 features, removed 8 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:540 - Pre-normalization feature selection completed. Selected 4 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:562 - Starting data normalization using method: z_score
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:570 - Using StandardScaler (Z-score normalization)
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:611 - Fitting scaler on training data with shape: (300, 4)
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:613 - Transforming test data with shape: (269, 4)
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:622 - Data normalization completed using z_score method
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:641 - Starting feature selection
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:653 - Starting with 4 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:662 - Executing correlation feature selection with params: {'threshold': 0.75, 'method': 'spearman', 'visualize': False, 'before_z_score': False}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:691 - correlation selected 2 features, removed 2 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:710 - Feature selection completed. Final number of selected features: 2
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:724 - Feature selection results saved to: ./ml_data/ml/rad\feature_selection_results.json
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:735 - Starting model training
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:746 - Training 3 models: ['LogisticRegression', 'SVM', 'XGBoost']
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:750 - Training model: LogisticRegression with config: {'params': {'random_state': 42, 'max_iter': 1000, 'C': 1.0, 'penalty': 'l2', 'solver': 'lbfgs'}}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:764 - Training model with 2 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:769 - Model LogisticRegression trained successfully
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:750 - Training model: SVM with config: {'params': {'random_state': 42}}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:764 - Training model with 2 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:769 - Model SVM trained successfully
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:750 - Training model: XGBoost with config: {'params': {'random_state': 42, 'n_estimators': 100, 'max_depth': 3, 'learning_rate': 0.1, 'subsample': 0.8, 'colsample_bytree': 0.8, 'objective': 'binary:logistic', 'eval_metric': 'logloss'}}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:764 - Training model with 2 features
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:769 - Model XGBoost trained successfully
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:782 - Model training completed. Trained 3 models successfully
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:793 - Starting model evaluation
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:805 - Evaluating model: LogisticRegression
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:809 - Evaluating LogisticRegression on training set
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:812 - Training set metrics: {'accuracy': 0.9366666666666666, 'sensitivity': 0.9545454545454546, 'specificity': 0.9178082191780822, 'ppv': 0.9245283018867925, 'npv': 0.950354609929078, 'auc': 0.9837217576943604, 'auc_ci': (0.98372185, array([0.97273776, 0.99470595])), 'hosmer_lemeshow_chi2': 5.522419493521212, 'hosmer_lemeshow_p_value': 0.700554856456213, 'spiegelhalter_z_statistic': 1.42708885763682e-05, 'spiegelhalter_z_p_value': 0.9999886134783365}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:815 - Evaluating LogisticRegression on test set
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:818 - Test set metrics: {'accuracy': 0.9256505576208178, 'sensitivity': 0.9064039408866995, 'specificity': 0.9848484848484849, 'ppv': 0.9945945945945946, 'npv': 0.7738095238095238, 'auc': 0.9915659053590088, 'auc_ci': (0.99156594, array([0.98327814, 0.99985374])), 'hosmer_lemeshow_chi2': 41.33691162458496, 'hosmer_lemeshow_p_value': 1.802964770702964e-06, 'spiegelhalter_z_statistic': 6.18199560436302, 'spiegelhalter_z_p_value': 6.329627932899484e-10}
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:824 - Feature importance calculated for LogisticRegression
2025-05-25 12:30:22 - modeling - INFO - machine_learning.py:829 - Plotting SHAP values for LogisticRegression
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:831 - SHAP plot saved for LogisticRegression
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:805 - Evaluating model: SVM
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:809 - Evaluating SVM on training set
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:812 - Training set metrics: {'accuracy': 0.9266666666666666, 'sensitivity': 0.9415584415584416, 'specificity': 0.910958904109589, 'ppv': 0.9177215189873418, 'npv': 0.9366197183098591, 'auc': 0.9833214730475004, 'auc_ci': (0.98332155, array([0.97219589, 0.9944472 ])), 'hosmer_lemeshow_chi2': 46.75210322938735, 'hosmer_lemeshow_p_value': 1.7096037108199624e-07, 'spiegelhalter_z_statistic': 1.1926536171395274, 'spiegelhalter_z_p_value': 0.23300505797119309}
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:815 - Evaluating SVM on test set
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:818 - Test set metrics: {'accuracy': 0.9368029739776952, 'sensitivity': 0.9211822660098522, 'specificity': 0.9848484848484849, 'ppv': 0.9946808510638298, 'npv': 0.8024691358024691, 'auc': 0.9913419913419913, 'auc_ci': (0.99134207, array([0.98186965, 1.        ])), 'hosmer_lemeshow_chi2': 76.18368549137953, 'hosmer_lemeshow_p_value': 2.856603842360528e-13, 'spiegelhalter_z_statistic': 7.281438513436435, 'spiegelhalter_z_p_value': 3.3018032752352156e-13}
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:824 - Feature importance calculated for SVM
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:829 - Plotting SHAP values for SVM
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:831 - SHAP plot saved for SVM
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:805 - Evaluating model: XGBoost
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:809 - Evaluating XGBoost on training set
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:812 - Training set metrics: {'accuracy': 0.97, 'sensitivity': 0.987012987012987, 'specificity': 0.952054794520548, 'ppv': 0.9559748427672956, 'npv': 0.9858156028368794, 'auc': 0.9950186799501869, 'auc_ci': (0.9950186, array([0.99001522, 1.        ])), 'hosmer_lemeshow_chi2': 14.573716345118944, 'hosmer_lemeshow_p_value': 0.06798388326236293, 'spiegelhalter_z_statistic': 0.06254482202208948, 'spiegelhalter_z_p_value': 0.9501289689731529}
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:815 - Evaluating XGBoost on test set
2025-05-25 12:30:23 - modeling - INFO - machine_learning.py:818 - Test set metrics: {'accuracy': 0.9144981412639405, 'sensitivity': 0.8916256157635468, 'specificity': 0.9848484848484849, 'ppv': 0.9945054945054945, 'npv': 0.7471264367816092, 'auc': 0.9895879982086878, 'auc_ci': (0.989588, array([0.97905368, 1.        ])), 'hosmer_lemeshow_chi2': 56.31401940222076, 'hosmer_lemeshow_p_value': 2.450239566798018e-09, 'spiegelhalter_z_statistic': 6.78338095153682, 'spiegelhalter_z_p_value': 1.1739498262386405e-11}
2025-05-25 12:30:24 - modeling - INFO - machine_learning.py:824 - Feature importance calculated for XGBoost
2025-05-25 12:30:24 - modeling - INFO - machine_learning.py:829 - Plotting SHAP values for XGBoost
2025-05-25 12:30:24 - modeling - INFO - machine_learning.py:831 - SHAP plot saved for XGBoost
2025-05-25 12:30:24 - modeling - INFO - machine_learning.py:843 - Performance table generated
2025-05-25 12:30:24 - modeling - INFO - machine_learning.py:851 - Performance table saved
2025-05-25 12:30:24 - modeling - INFO - machine_learning.py:859 - Generating visualization plots
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:861 - Visualization plots saved
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:868 - Saving detailed prediction results
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:892 - Saving detailed prediction results
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:920 - Saved complete prediction results to: ./ml_data/ml/rad\all_prediction_results.csv
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:870 - Prediction results saved
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:878 - Saving trained models and preprocessing information
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:926 - Saving trained models and preprocessing information
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:951 - Saved complete model package to: ./ml_data/ml/rad\model_package.pkl
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:1048 - Saved model usage instructions to: ./ml_data/ml/rad\model_usage_instructions.txt
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:880 - Models and preprocessing information saved
2025-05-25 12:30:26 - modeling - INFO - machine_learning.py:885 - Model evaluation completed
