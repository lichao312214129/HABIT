{
  "size_buckets": {
    "tiny": {
      "files": [
        "obstacle.py",
        "pyproject.toml",
        "requirements.txt",
        "config\\config_extract_features.yaml",
        "config\\config_icc_analysis.yaml",
        "config\\config_image_preprocessing.yaml",
        "config\\config_image_preprocessing_dcm2nii.yaml",
        "config\\image_files.yaml",
        "habit\\__init__.py",
        "habit\\core\\__init__.py",
        "habit\\core\\habitat_analysis\\__init__.py",
        "habit\\core\\habitat_analysis\\clustering\\__init__.py",
        "habit\\core\\habitat_analysis\\features\\__init__.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\__init__.py",
        "habit\\core\\machine_learning\\__init__.py",
        "habit\\core\\machine_learning\\feature_selectors\\__init__.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\__init__.py",
        "habit\\core\\machine_learning\\models\\__init__.py",
        "habit\\core\\machine_learning\\statistics\\spiegelhalter_z_test.py",
        "habit\\core\\machine_learning\\visualization\\__init__.py",
        "habit\\core\\preprocessing\\base_preprocessor.py",
        "habit\\core\\preprocessing\\__init__.py",
        "habit\\utils\\example_paths_config.yaml",
        "habit\\utils\\__init__.py",
        "scripts\\app_model_comparison_plots.py"
      ],
      "count": 26,
      "total_lines": 670
    },
    "small": {
      "files": [
        "del_some_dir.py",
        "INSTALL.md",
        "config\\config_getting_habitat.yaml",
        "config\\config_model_comparison.yaml",
        "config\\config_traditional_radiomics.yaml",
        "config\\parameter.yaml",
        "config\\parameter_habitat.yaml",
        "config\\params_supervoxel_radiomics.yaml",
        "config\\params_voxel_radiomics.yaml",
        "habit\\core\\habitat_analysis\\clustering\\affinity_propagation.py",
        "habit\\core\\habitat_analysis\\clustering\\custom_clustering_template.py",
        "habit\\core\\habitat_analysis\\clustering\\gmm_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\kmeans_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\test_validation_methods.py",
        "habit\\core\\habitat_analysis\\features\\concat_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\custom_feature_extractor_template.py",
        "habit\\core\\habitat_analysis\\features\\kinetic_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\my_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\raw_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\README.md",
        "habit\\core\\habitat_analysis\\features\\test_parser.py",
        "habit\\core\\habitat_analysis\\features\\test_supervoxel_parser.py",
        "habit\\core\\habitat_analysis\\features\\voxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\basic_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\feature_utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\ith_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\anova_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\chi2_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\correlation_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\mrmr_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\rfecv_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\selector_registry.py",
        "habit\\core\\machine_learning\\feature_selectors\\variance_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\vif_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\README.md",
        "habit\\core\\machine_learning\\models\\base.py",
        "habit\\core\\machine_learning\\models\\custom_model_example.py",
        "habit\\core\\machine_learning\\models\\factory.py",
        "habit\\core\\machine_learning\\models\\logistic_regression_model.py",
        "habit\\core\\machine_learning\\models\\random_forest_model.py",
        "habit\\core\\machine_learning\\models\\svm_model.py",
        "habit\\core\\machine_learning\\models\\utils.py",
        "habit\\core\\machine_learning\\models\\xgboost_model.py",
        "habit\\core\\preprocessing\\custom_preprocessor_template.py",
        "habit\\core\\preprocessing\\histogram_standardization.py",
        "habit\\core\\preprocessing\\load_image.py",
        "habit\\core\\preprocessing\\preprocessor_factory.py",
        "habit\\utils\\config_utils.py",
        "habit\\utils\\file_system_utils.py",
        "habit\\utils\\image_converter.py",
        "habit\\utils\\log_utils.py",
        "habit\\utils\\progress_utils.py",
        "scripts\\app_habitat_test_retest_mapper.py",
        "scripts\\app_image_preprocessing.py",
        "scripts\\app_of_machine_learning.py"
      ],
      "count": 56,
      "total_lines": 5651
    },
    "medium": {
      "files": [
        "README.md",
        "config\\config_machine_learning.yaml",
        "doc\\app_dcm2nii.md",
        "doc\\app_extracting_habitat_features.md",
        "doc\\app_getting_habitat_map.md",
        "doc\\app_habitat_test_retest.md",
        "doc\\app_icc_analysis.md",
        "doc\\app_image_preprocessing.md",
        "doc\\app_model_comparison_plots.md",
        "habit\\core\\habitat_analysis\\clustering\\cluster_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\dbscan_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\hierarchical_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\mean_shift_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\spectral_clustering.py",
        "habit\\core\\habitat_analysis\\features\\base_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\feature_expression_parser.py",
        "habit\\core\\habitat_analysis\\features\\feature_extractor_factory.py",
        "habit\\core\\habitat_analysis\\features\\feature_preprocessing.py",
        "habit\\core\\habitat_analysis\\features\\local_entropy_extractor.py",
        "habit\\core\\habitat_analysis\\features\\mean_voxel_features_extractor.py",
        "habit\\core\\habitat_analysis\\features\\supervoxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\get_msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\habitat_radiomics.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\traditional_radiomics_extractor.py",
        "habit\\core\\machine_learning\\test.py",
        "habit\\core\\machine_learning\\tpot_test.py",
        "habit\\core\\machine_learning\\evaluation\\metrics.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\lasso_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\statistical_test_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\univariate_logistic_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\habitat_test_retest_mapper.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.py",
        "habit\\core\\machine_learning\\models\\autogluon_model.py",
        "habit\\core\\machine_learning\\models\\README.md",
        "habit\\core\\machine_learning\\statistics\\delong_test.py",
        "habit\\core\\machine_learning\\statistics\\hosmer_lemeshow_test.py",
        "habit\\core\\preprocessing\\dcm2niix_converter.py",
        "habit\\core\\preprocessing\\image_processor_pipeline.py",
        "habit\\core\\preprocessing\\n4_correction.py",
        "habit\\core\\preprocessing\\README.md",
        "habit\\core\\preprocessing\\registration.py",
        "habit\\core\\preprocessing\\resample.py",
        "habit\\core\\preprocessing\\zscore_normalization.py",
        "habit\\utils\\icc_config.py",
        "habit\\utils\\io_utils.py",
        "habit\\utils\\visualization.py",
        "habit\\utils\\visualization_utils.py",
        "ml_data\\test_ids.txt",
        "ml_data\\train_ids.txt",
        "scripts\\app_dilation_or_erosion.py",
        "scripts\\app_extracting_habitat_features.py",
        "scripts\\app_getting_habitat_map.py",
        "scripts\\app_icc_analysis.py",
        "scripts\\day3_3_get_w_use_BGD.py",
        "scripts\\day3_6_correlation.py",
        "scripts\\get_supervoxel.py",
        "scripts\\image2array.py",
        "scripts\\organize_image_data.py"
      ],
      "count": 62,
      "total_lines": 16635
    },
    "large": {
      "files": [
        "count_lines.py",
        "doc\\app_of_machine_learning.md",
        "habit\\core\\habitat_analysis\\habitat_analysis.py",
        "habit\\core\\habitat_analysis\\clustering\\base_clustering.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\new_extractor.py",
        "habit\\core\\machine_learning\\model_comparison.py",
        "habit\\core\\machine_learning\\evaluation\\model_evaluation.py",
        "habit\\core\\machine_learning\\feature_selectors\\python_stepwise_selector.py",
        "habit\\core\\machine_learning\\visualization\\plotting.py",
        "scripts\\app_traditional_radiomics_extractor.py"
      ],
      "count": 11,
      "total_lines": 7540
    },
    "huge": {
      "files": [
        "files_summary.json",
        "habit\\core\\machine_learning\\machine_learning.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.json"
      ],
      "count": 3,
      "total_lines": 5291
    }
  },
  "complexity_buckets": {
    "simple": {
      "files": [
        "del_some_dir.py",
        "INSTALL.md",
        "obstacle.py",
        "pyproject.toml",
        "requirements.txt",
        "config\\config_extract_features.yaml",
        "config\\config_getting_habitat.yaml",
        "config\\config_icc_analysis.yaml",
        "config\\config_image_preprocessing.yaml",
        "config\\config_image_preprocessing_dcm2nii.yaml",
        "config\\config_machine_learning.yaml",
        "config\\config_model_comparison.yaml",
        "config\\config_traditional_radiomics.yaml",
        "config\\image_files.yaml",
        "config\\parameter.yaml",
        "config\\parameter_habitat.yaml",
        "config\\params_supervoxel_radiomics.yaml",
        "config\\params_voxel_radiomics.yaml",
        "doc\\app_extracting_habitat_features.md",
        "habit\\__init__.py",
        "habit\\core\\__init__.py",
        "habit\\core\\habitat_analysis\\__init__.py",
        "habit\\core\\habitat_analysis\\clustering\\custom_clustering_template.py",
        "habit\\core\\habitat_analysis\\clustering\\gmm_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\kmeans_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\test_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\__init__.py",
        "habit\\core\\habitat_analysis\\features\\base_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\concat_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\custom_feature_extractor_template.py",
        "habit\\core\\habitat_analysis\\features\\kinetic_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\mean_voxel_features_extractor.py",
        "habit\\core\\habitat_analysis\\features\\my_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\raw_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\README.md",
        "habit\\core\\habitat_analysis\\features\\test_parser.py",
        "habit\\core\\habitat_analysis\\features\\test_supervoxel_parser.py",
        "habit\\core\\habitat_analysis\\features\\voxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\features\\__init__.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\basic_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\feature_utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\ith_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\README.md",
        "habit\\core\\habitat_analysis\\feature_extraction\\utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\__init__.py",
        "habit\\core\\machine_learning\\__init__.py",
        "habit\\core\\machine_learning\\feature_selectors\\anova_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\chi2_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\correlation_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\mrmr_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\selector_registry.py",
        "habit\\core\\machine_learning\\feature_selectors\\variance_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\vif_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\__init__.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\__init__.py",
        "habit\\core\\machine_learning\\models\\base.py",
        "habit\\core\\machine_learning\\models\\custom_model_example.py",
        "habit\\core\\machine_learning\\models\\factory.py",
        "habit\\core\\machine_learning\\models\\logistic_regression_model.py",
        "habit\\core\\machine_learning\\models\\random_forest_model.py",
        "habit\\core\\machine_learning\\models\\svm_model.py",
        "habit\\core\\machine_learning\\models\\utils.py",
        "habit\\core\\machine_learning\\models\\xgboost_model.py",
        "habit\\core\\machine_learning\\models\\__init__.py",
        "habit\\core\\machine_learning\\statistics\\hosmer_lemeshow_test.py",
        "habit\\core\\machine_learning\\statistics\\spiegelhalter_z_test.py",
        "habit\\core\\machine_learning\\visualization\\__init__.py",
        "habit\\core\\preprocessing\\base_preprocessor.py",
        "habit\\core\\preprocessing\\custom_preprocessor_template.py",
        "habit\\core\\preprocessing\\histogram_standardization.py",
        "habit\\core\\preprocessing\\load_image.py",
        "habit\\core\\preprocessing\\preprocessor_factory.py",
        "habit\\core\\preprocessing\\__init__.py",
        "habit\\utils\\config_utils.py",
        "habit\\utils\\example_paths_config.yaml",
        "habit\\utils\\icc_config.py",
        "habit\\utils\\image_converter.py",
        "habit\\utils\\log_utils.py",
        "habit\\utils\\progress_utils.py",
        "habit\\utils\\__init__.py",
        "scripts\\app_habitat_test_retest_mapper.py",
        "scripts\\app_image_preprocessing.py",
        "scripts\\app_model_comparison_plots.py",
        "scripts\\app_of_machine_learning.py"
      ],
      "count": 85,
      "total_lines": 6984
    },
    "moderate": {
      "files": [
        "doc\\app_dcm2nii.md",
        "doc\\app_getting_habitat_map.md",
        "doc\\app_habitat_test_retest.md",
        "doc\\app_icc_analysis.md",
        "doc\\app_image_preprocessing.md",
        "doc\\app_model_comparison_plots.md",
        "habit\\core\\habitat_analysis\\clustering\\affinity_propagation.py",
        "habit\\core\\habitat_analysis\\clustering\\cluster_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\dbscan_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\hierarchical_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\mean_shift_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\spectral_clustering.py",
        "habit\\core\\habitat_analysis\\features\\feature_expression_parser.py",
        "habit\\core\\habitat_analysis\\features\\feature_extractor_factory.py",
        "habit\\core\\habitat_analysis\\features\\feature_preprocessing.py",
        "habit\\core\\habitat_analysis\\features\\local_entropy_extractor.py",
        "habit\\core\\habitat_analysis\\features\\supervoxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\get_msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\habitat_radiomics.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\traditional_radiomics_extractor.py",
        "habit\\core\\machine_learning\\test.py",
        "habit\\core\\machine_learning\\tpot_test.py",
        "habit\\core\\machine_learning\\evaluation\\metrics.py",
        "habit\\core\\machine_learning\\feature_selectors\\lasso_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\rfecv_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\statistical_test_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\univariate_logistic_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\habitat_test_retest_mapper.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.py",
        "habit\\core\\machine_learning\\models\\autogluon_model.py",
        "habit\\core\\machine_learning\\models\\README.md",
        "habit\\core\\machine_learning\\statistics\\delong_test.py",
        "habit\\core\\preprocessing\\image_processor_pipeline.py",
        "habit\\core\\preprocessing\\n4_correction.py",
        "habit\\core\\preprocessing\\README.md",
        "habit\\core\\preprocessing\\registration.py",
        "habit\\core\\preprocessing\\resample.py",
        "habit\\core\\preprocessing\\zscore_normalization.py",
        "habit\\utils\\file_system_utils.py",
        "habit\\utils\\io_utils.py",
        "habit\\utils\\visualization.py",
        "habit\\utils\\visualization_utils.py",
        "ml_data\\test_ids.txt",
        "ml_data\\train_ids.txt",
        "scripts\\app_dilation_or_erosion.py",
        "scripts\\app_extracting_habitat_features.py",
        "scripts\\app_getting_habitat_map.py",
        "scripts\\app_icc_analysis.py",
        "scripts\\day3_3_get_w_use_BGD.py",
        "scripts\\day3_6_correlation.py",
        "scripts\\get_supervoxel.py",
        "scripts\\image2array.py",
        "scripts\\organize_image_data.py"
      ],
      "count": 55,
      "total_lines": 14097
    },
    "complex": {
      "files": [
        "count_lines.py",
        "README.md",
        "doc\\app_of_machine_learning.md",
        "habit\\core\\habitat_analysis\\habitat_analysis.py",
        "habit\\core\\habitat_analysis\\clustering\\base_clustering.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\new_extractor.py",
        "habit\\core\\machine_learning\\model_comparison.py",
        "habit\\core\\machine_learning\\evaluation\\model_evaluation.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\python_stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\README.md",
        "habit\\core\\machine_learning\\visualization\\plotting.py",
        "habit\\core\\preprocessing\\dcm2niix_converter.py",
        "scripts\\app_traditional_radiomics_extractor.py"
      ],
      "count": 15,
      "total_lines": 9415
    },
    "very_complex": {
      "files": [
        "files_summary.json",
        "habit\\core\\machine_learning\\machine_learning.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.json"
      ],
      "count": 3,
      "total_lines": 5291
    }
  },
  "module_buckets": {
    "count_lines.py": {
      "files": [
        "count_lines.py"
      ],
      "count": 1,
      "total_lines": 592
    },
    "del_some_dir.py": {
      "files": [
        "del_some_dir.py"
      ],
      "count": 1,
      "total_lines": 100
    },
    "files_summary.json": {
      "files": [
        "files_summary.json"
      ],
      "count": 1,
      "total_lines": 1199
    },
    "INSTALL.md": {
      "files": [
        "INSTALL.md"
      ],
      "count": 1,
      "total_lines": 59
    },
    "obstacle.py": {
      "files": [
        "obstacle.py"
      ],
      "count": 1,
      "total_lines": 45
    },
    "pyproject.toml": {
      "files": [
        "pyproject.toml"
      ],
      "count": 1,
      "total_lines": 39
    },
    "README.md": {
      "files": [
        "README.md"
      ],
      "count": 1,
      "total_lines": 471
    },
    "requirements.txt": {
      "files": [
        "requirements.txt"
      ],
      "count": 1,
      "total_lines": 23
    },
    "config": {
      "files": [
        "config\\config_extract_features.yaml",
        "config\\config_getting_habitat.yaml",
        "config\\config_icc_analysis.yaml",
        "config\\config_image_preprocessing.yaml",
        "config\\config_image_preprocessing_dcm2nii.yaml",
        "config\\config_machine_learning.yaml",
        "config\\config_model_comparison.yaml",
        "config\\config_traditional_radiomics.yaml",
        "config\\image_files.yaml",
        "config\\parameter.yaml",
        "config\\parameter_habitat.yaml",
        "config\\params_supervoxel_radiomics.yaml",
        "config\\params_voxel_radiomics.yaml"
      ],
      "count": 13,
      "total_lines": 887
    },
    "doc": {
      "files": [
        "doc\\app_dcm2nii.md",
        "doc\\app_extracting_habitat_features.md",
        "doc\\app_getting_habitat_map.md",
        "doc\\app_habitat_test_retest.md",
        "doc\\app_icc_analysis.md",
        "doc\\app_image_preprocessing.md",
        "doc\\app_model_comparison_plots.md",
        "doc\\app_of_machine_learning.md"
      ],
      "count": 8,
      "total_lines": 2296
    },
    "habit": {
      "files": [
        "habit\\__init__.py",
        "habit\\core\\__init__.py",
        "habit\\core\\habitat_analysis\\habitat_analysis.py",
        "habit\\core\\habitat_analysis\\__init__.py",
        "habit\\core\\habitat_analysis\\clustering\\affinity_propagation.py",
        "habit\\core\\habitat_analysis\\clustering\\base_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\cluster_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\custom_clustering_template.py",
        "habit\\core\\habitat_analysis\\clustering\\dbscan_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\gmm_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\hierarchical_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\kmeans_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\mean_shift_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\spectral_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\test_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\__init__.py",
        "habit\\core\\habitat_analysis\\features\\base_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\concat_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\custom_feature_extractor_template.py",
        "habit\\core\\habitat_analysis\\features\\feature_expression_parser.py",
        "habit\\core\\habitat_analysis\\features\\feature_extractor_factory.py",
        "habit\\core\\habitat_analysis\\features\\feature_preprocessing.py",
        "habit\\core\\habitat_analysis\\features\\kinetic_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\local_entropy_extractor.py",
        "habit\\core\\habitat_analysis\\features\\mean_voxel_features_extractor.py",
        "habit\\core\\habitat_analysis\\features\\my_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\raw_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\README.md",
        "habit\\core\\habitat_analysis\\features\\supervoxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\features\\test_parser.py",
        "habit\\core\\habitat_analysis\\features\\test_supervoxel_parser.py",
        "habit\\core\\habitat_analysis\\features\\voxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\features\\__init__.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\basic_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\feature_utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\get_msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\habitat_radiomics.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\ith_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\new_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\README.md",
        "habit\\core\\habitat_analysis\\feature_extraction\\traditional_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\__init__.py",
        "habit\\core\\machine_learning\\machine_learning.py",
        "habit\\core\\machine_learning\\model_comparison.py",
        "habit\\core\\machine_learning\\test.py",
        "habit\\core\\machine_learning\\tpot_test.py",
        "habit\\core\\machine_learning\\__init__.py",
        "habit\\core\\machine_learning\\evaluation\\metrics.py",
        "habit\\core\\machine_learning\\evaluation\\model_evaluation.py",
        "habit\\core\\machine_learning\\feature_selectors\\anova_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\chi2_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\correlation_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\lasso_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\mrmr_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\python_stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\rfecv_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\selector_registry.py",
        "habit\\core\\machine_learning\\feature_selectors\\statistical_test_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\univariate_logistic_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\variance_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\vif_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\__init__.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\habitat_test_retest_mapper.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.json",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\__init__.py",
        "habit\\core\\machine_learning\\models\\autogluon_model.py",
        "habit\\core\\machine_learning\\models\\base.py",
        "habit\\core\\machine_learning\\models\\custom_model_example.py",
        "habit\\core\\machine_learning\\models\\factory.py",
        "habit\\core\\machine_learning\\models\\logistic_regression_model.py",
        "habit\\core\\machine_learning\\models\\random_forest_model.py",
        "habit\\core\\machine_learning\\models\\README.md",
        "habit\\core\\machine_learning\\models\\svm_model.py",
        "habit\\core\\machine_learning\\models\\utils.py",
        "habit\\core\\machine_learning\\models\\xgboost_model.py",
        "habit\\core\\machine_learning\\models\\__init__.py",
        "habit\\core\\machine_learning\\statistics\\delong_test.py",
        "habit\\core\\machine_learning\\statistics\\hosmer_lemeshow_test.py",
        "habit\\core\\machine_learning\\statistics\\spiegelhalter_z_test.py",
        "habit\\core\\machine_learning\\visualization\\plotting.py",
        "habit\\core\\machine_learning\\visualization\\__init__.py",
        "habit\\core\\preprocessing\\base_preprocessor.py",
        "habit\\core\\preprocessing\\custom_preprocessor_template.py",
        "habit\\core\\preprocessing\\dcm2niix_converter.py",
        "habit\\core\\preprocessing\\histogram_standardization.py",
        "habit\\core\\preprocessing\\image_processor_pipeline.py",
        "habit\\core\\preprocessing\\load_image.py",
        "habit\\core\\preprocessing\\n4_correction.py",
        "habit\\core\\preprocessing\\preprocessor_factory.py",
        "habit\\core\\preprocessing\\README.md",
        "habit\\core\\preprocessing\\registration.py",
        "habit\\core\\preprocessing\\resample.py",
        "habit\\core\\preprocessing\\zscore_normalization.py",
        "habit\\core\\preprocessing\\__init__.py",
        "habit\\utils\\config_utils.py",
        "habit\\utils\\example_paths_config.yaml",
        "habit\\utils\\file_system_utils.py",
        "habit\\utils\\icc_config.py",
        "habit\\utils\\image_converter.py",
        "habit\\utils\\io_utils.py",
        "habit\\utils\\log_utils.py",
        "habit\\utils\\progress_utils.py",
        "habit\\utils\\visualization.py",
        "habit\\utils\\visualization_utils.py",
        "habit\\utils\\__init__.py"
      ],
      "count": 113,
      "total_lines": 26331
    },
    "ml_data": {
      "files": [
        "ml_data\\test_ids.txt",
        "ml_data\\train_ids.txt"
      ],
      "count": 2,
      "total_lines": 569
    },
    "scripts": {
      "files": [
        "scripts\\app_dilation_or_erosion.py",
        "scripts\\app_extracting_habitat_features.py",
        "scripts\\app_getting_habitat_map.py",
        "scripts\\app_habitat_test_retest_mapper.py",
        "scripts\\app_icc_analysis.py",
        "scripts\\app_image_preprocessing.py",
        "scripts\\app_model_comparison_plots.py",
        "scripts\\app_of_machine_learning.py",
        "scripts\\app_traditional_radiomics_extractor.py",
        "scripts\\day3_3_get_w_use_BGD.py",
        "scripts\\day3_6_correlation.py",
        "scripts\\get_supervoxel.py",
        "scripts\\image2array.py",
        "scripts\\organize_image_data.py"
      ],
      "count": 14,
      "total_lines": 3176
    }
  },
  "depth_buckets": {
    "depth_0": {
      "files": [
        "count_lines.py",
        "del_some_dir.py",
        "files_summary.json",
        "INSTALL.md",
        "obstacle.py",
        "pyproject.toml",
        "README.md",
        "requirements.txt"
      ],
      "count": 8,
      "total_lines": 2528
    },
    "depth_1": {
      "files": [
        "config\\config_extract_features.yaml",
        "config\\config_getting_habitat.yaml",
        "config\\config_icc_analysis.yaml",
        "config\\config_image_preprocessing.yaml",
        "config\\config_image_preprocessing_dcm2nii.yaml",
        "config\\config_machine_learning.yaml",
        "config\\config_model_comparison.yaml",
        "config\\config_traditional_radiomics.yaml",
        "config\\image_files.yaml",
        "config\\parameter.yaml",
        "config\\parameter_habitat.yaml",
        "config\\params_supervoxel_radiomics.yaml",
        "config\\params_voxel_radiomics.yaml",
        "doc\\app_dcm2nii.md",
        "doc\\app_extracting_habitat_features.md",
        "doc\\app_getting_habitat_map.md",
        "doc\\app_habitat_test_retest.md",
        "doc\\app_icc_analysis.md",
        "doc\\app_image_preprocessing.md",
        "doc\\app_model_comparison_plots.md",
        "doc\\app_of_machine_learning.md",
        "habit\\__init__.py",
        "ml_data\\test_ids.txt",
        "ml_data\\train_ids.txt",
        "scripts\\app_dilation_or_erosion.py",
        "scripts\\app_extracting_habitat_features.py",
        "scripts\\app_getting_habitat_map.py",
        "scripts\\app_habitat_test_retest_mapper.py",
        "scripts\\app_icc_analysis.py",
        "scripts\\app_image_preprocessing.py",
        "scripts\\app_model_comparison_plots.py",
        "scripts\\app_of_machine_learning.py",
        "scripts\\app_traditional_radiomics_extractor.py",
        "scripts\\day3_3_get_w_use_BGD.py",
        "scripts\\day3_6_correlation.py",
        "scripts\\get_supervoxel.py",
        "scripts\\image2array.py",
        "scripts\\organize_image_data.py"
      ],
      "count": 38,
      "total_lines": 6942
    },
    "depth_2": {
      "files": [
        "habit\\core\\__init__.py",
        "habit\\utils\\config_utils.py",
        "habit\\utils\\example_paths_config.yaml",
        "habit\\utils\\file_system_utils.py",
        "habit\\utils\\icc_config.py",
        "habit\\utils\\image_converter.py",
        "habit\\utils\\io_utils.py",
        "habit\\utils\\log_utils.py",
        "habit\\utils\\progress_utils.py",
        "habit\\utils\\visualization.py",
        "habit\\utils\\visualization_utils.py",
        "habit\\utils\\__init__.py"
      ],
      "count": 12,
      "total_lines": 1536
    },
    "depth_3": {
      "files": [
        "habit\\core\\habitat_analysis\\habitat_analysis.py",
        "habit\\core\\habitat_analysis\\__init__.py",
        "habit\\core\\machine_learning\\machine_learning.py",
        "habit\\core\\machine_learning\\model_comparison.py",
        "habit\\core\\machine_learning\\test.py",
        "habit\\core\\machine_learning\\tpot_test.py",
        "habit\\core\\machine_learning\\__init__.py",
        "habit\\core\\preprocessing\\base_preprocessor.py",
        "habit\\core\\preprocessing\\custom_preprocessor_template.py",
        "habit\\core\\preprocessing\\dcm2niix_converter.py",
        "habit\\core\\preprocessing\\histogram_standardization.py",
        "habit\\core\\preprocessing\\image_processor_pipeline.py",
        "habit\\core\\preprocessing\\load_image.py",
        "habit\\core\\preprocessing\\n4_correction.py",
        "habit\\core\\preprocessing\\preprocessor_factory.py",
        "habit\\core\\preprocessing\\README.md",
        "habit\\core\\preprocessing\\registration.py",
        "habit\\core\\preprocessing\\resample.py",
        "habit\\core\\preprocessing\\zscore_normalization.py",
        "habit\\core\\preprocessing\\__init__.py"
      ],
      "count": 20,
      "total_lines": 6230
    },
    "depth_4": {
      "files": [
        "habit\\core\\habitat_analysis\\clustering\\affinity_propagation.py",
        "habit\\core\\habitat_analysis\\clustering\\base_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\cluster_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\custom_clustering_template.py",
        "habit\\core\\habitat_analysis\\clustering\\dbscan_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\gmm_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\hierarchical_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\kmeans_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\mean_shift_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\spectral_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\test_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\__init__.py",
        "habit\\core\\habitat_analysis\\features\\base_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\concat_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\custom_feature_extractor_template.py",
        "habit\\core\\habitat_analysis\\features\\feature_expression_parser.py",
        "habit\\core\\habitat_analysis\\features\\feature_extractor_factory.py",
        "habit\\core\\habitat_analysis\\features\\feature_preprocessing.py",
        "habit\\core\\habitat_analysis\\features\\kinetic_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\local_entropy_extractor.py",
        "habit\\core\\habitat_analysis\\features\\mean_voxel_features_extractor.py",
        "habit\\core\\habitat_analysis\\features\\my_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\raw_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\README.md",
        "habit\\core\\habitat_analysis\\features\\supervoxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\features\\test_parser.py",
        "habit\\core\\habitat_analysis\\features\\test_supervoxel_parser.py",
        "habit\\core\\habitat_analysis\\features\\voxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\features\\__init__.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\basic_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\feature_utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\get_msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\habitat_radiomics.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\ith_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\new_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\README.md",
        "habit\\core\\habitat_analysis\\feature_extraction\\traditional_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\__init__.py",
        "habit\\core\\machine_learning\\evaluation\\metrics.py",
        "habit\\core\\machine_learning\\evaluation\\model_evaluation.py",
        "habit\\core\\machine_learning\\feature_selectors\\anova_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\chi2_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\correlation_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\lasso_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\mrmr_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\python_stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\rfecv_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\selector_registry.py",
        "habit\\core\\machine_learning\\feature_selectors\\statistical_test_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\univariate_logistic_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\variance_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\vif_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\__init__.py",
        "habit\\core\\machine_learning\\models\\autogluon_model.py",
        "habit\\core\\machine_learning\\models\\base.py",
        "habit\\core\\machine_learning\\models\\custom_model_example.py",
        "habit\\core\\machine_learning\\models\\factory.py",
        "habit\\core\\machine_learning\\models\\logistic_regression_model.py",
        "habit\\core\\machine_learning\\models\\random_forest_model.py",
        "habit\\core\\machine_learning\\models\\README.md",
        "habit\\core\\machine_learning\\models\\svm_model.py",
        "habit\\core\\machine_learning\\models\\utils.py",
        "habit\\core\\machine_learning\\models\\xgboost_model.py",
        "habit\\core\\machine_learning\\models\\__init__.py",
        "habit\\core\\machine_learning\\statistics\\delong_test.py",
        "habit\\core\\machine_learning\\statistics\\hosmer_lemeshow_test.py",
        "habit\\core\\machine_learning\\statistics\\spiegelhalter_z_test.py",
        "habit\\core\\machine_learning\\visualization\\plotting.py",
        "habit\\core\\machine_learning\\visualization\\__init__.py"
      ],
      "count": 75,
      "total_lines": 14952
    },
    "depth_5": {
      "files": [
        "habit\\core\\machine_learning\\feature_selectors\\icc\\habitat_test_retest_mapper.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.json",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\__init__.py"
      ],
      "count": 5,
      "total_lines": 3599
    }
  },
  "comment_ratio_buckets": {
    "no_comments": {
      "files": [
        "files_summary.json",
        "pyproject.toml",
        "requirements.txt",
        "config\\image_files.yaml",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.json",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\__init__.py",
        "habit\\core\\machine_learning\\visualization\\__init__.py",
        "habit\\core\\preprocessing\\__init__.py",
        "habit\\utils\\__init__.py",
        "ml_data\\test_ids.txt",
        "ml_data\\train_ids.txt"
      ],
      "count": 11,
      "total_lines": 4590
    },
    "low_comments": {
      "files": [
        "count_lines.py",
        "README.md",
        "doc\\app_dcm2nii.md",
        "doc\\app_getting_habitat_map.md",
        "doc\\app_habitat_test_retest.md",
        "doc\\app_image_preprocessing.md",
        "doc\\app_model_comparison_plots.md",
        "doc\\app_of_machine_learning.md",
        "habit\\__init__.py",
        "habit\\core\\habitat_analysis\\clustering\\affinity_propagation.py",
        "habit\\core\\habitat_analysis\\clustering\\cluster_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\dbscan_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\gmm_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\hierarchical_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\kmeans_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\mean_shift_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\spectral_clustering.py",
        "habit\\core\\habitat_analysis\\features\\feature_preprocessing.py",
        "habit\\core\\habitat_analysis\\features\\__init__.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\basic_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\feature_utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\habitat_radiomics.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\new_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\README.md",
        "habit\\core\\habitat_analysis\\feature_extraction\\traditional_radiomics_extractor.py",
        "habit\\core\\machine_learning\\test.py",
        "habit\\core\\machine_learning\\evaluation\\model_evaluation.py",
        "habit\\core\\machine_learning\\feature_selectors\\anova_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\chi2_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\mrmr_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\python_stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\README.md",
        "habit\\core\\machine_learning\\feature_selectors\\rfecv_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\selector_registry.py",
        "habit\\core\\machine_learning\\feature_selectors\\statistical_test_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\stepwise_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\univariate_logistic_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\__init__.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\habitat_test_retest_mapper.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\icc.py",
        "habit\\core\\machine_learning\\feature_selectors\\icc\\README.md",
        "habit\\core\\machine_learning\\models\\README.md",
        "habit\\core\\machine_learning\\models\\utils.py",
        "habit\\core\\machine_learning\\statistics\\delong_test.py",
        "habit\\core\\preprocessing\\dcm2niix_converter.py",
        "habit\\core\\preprocessing\\README.md",
        "habit\\core\\preprocessing\\resample.py",
        "habit\\utils\\config_utils.py",
        "habit\\utils\\example_paths_config.yaml",
        "habit\\utils\\file_system_utils.py",
        "habit\\utils\\icc_config.py",
        "habit\\utils\\image_converter.py",
        "habit\\utils\\visualization.py",
        "scripts\\app_extracting_habitat_features.py",
        "scripts\\app_getting_habitat_map.py",
        "scripts\\app_habitat_test_retest_mapper.py",
        "scripts\\app_icc_analysis.py",
        "scripts\\app_image_preprocessing.py",
        "scripts\\app_traditional_radiomics_extractor.py",
        "scripts\\image2array.py",
        "scripts\\organize_image_data.py"
      ],
      "count": 63,
      "total_lines": 16175
    },
    "good_comments": {
      "files": [
        "del_some_dir.py",
        "INSTALL.md",
        "obstacle.py",
        "config\\config_extract_features.yaml",
        "config\\config_getting_habitat.yaml",
        "doc\\app_extracting_habitat_features.md",
        "doc\\app_icc_analysis.md",
        "habit\\core\\__init__.py",
        "habit\\core\\habitat_analysis\\habitat_analysis.py",
        "habit\\core\\habitat_analysis\\__init__.py",
        "habit\\core\\habitat_analysis\\clustering\\base_clustering.py",
        "habit\\core\\habitat_analysis\\clustering\\custom_clustering_template.py",
        "habit\\core\\habitat_analysis\\clustering\\test_validation_methods.py",
        "habit\\core\\habitat_analysis\\clustering\\__init__.py",
        "habit\\core\\habitat_analysis\\features\\base_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\concat_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\custom_feature_extractor_template.py",
        "habit\\core\\habitat_analysis\\features\\feature_expression_parser.py",
        "habit\\core\\habitat_analysis\\features\\feature_extractor_factory.py",
        "habit\\core\\habitat_analysis\\features\\kinetic_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\local_entropy_extractor.py",
        "habit\\core\\habitat_analysis\\features\\mean_voxel_features_extractor.py",
        "habit\\core\\habitat_analysis\\features\\my_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\raw_feature_extractor.py",
        "habit\\core\\habitat_analysis\\features\\README.md",
        "habit\\core\\habitat_analysis\\features\\supervoxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\features\\test_parser.py",
        "habit\\core\\habitat_analysis\\features\\test_supervoxel_parser.py",
        "habit\\core\\habitat_analysis\\features\\voxel_radiomics_extractor.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\get_msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\ith_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\msi_features.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\utils.py",
        "habit\\core\\habitat_analysis\\feature_extraction\\__init__.py",
        "habit\\core\\machine_learning\\machine_learning.py",
        "habit\\core\\machine_learning\\model_comparison.py",
        "habit\\core\\machine_learning\\tpot_test.py",
        "habit\\core\\machine_learning\\__init__.py",
        "habit\\core\\machine_learning\\evaluation\\metrics.py",
        "habit\\core\\machine_learning\\feature_selectors\\correlation_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\lasso_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\variance_selector.py",
        "habit\\core\\machine_learning\\feature_selectors\\vif_selector.py",
        "habit\\core\\machine_learning\\models\\autogluon_model.py",
        "habit\\core\\machine_learning\\models\\base.py",
        "habit\\core\\machine_learning\\models\\custom_model_example.py",
        "habit\\core\\machine_learning\\models\\factory.py",
        "habit\\core\\machine_learning\\models\\logistic_regression_model.py",
        "habit\\core\\machine_learning\\models\\random_forest_model.py",
        "habit\\core\\machine_learning\\models\\svm_model.py",
        "habit\\core\\machine_learning\\models\\xgboost_model.py",
        "habit\\core\\machine_learning\\models\\__init__.py",
        "habit\\core\\machine_learning\\statistics\\spiegelhalter_z_test.py",
        "habit\\core\\machine_learning\\visualization\\plotting.py",
        "habit\\core\\preprocessing\\base_preprocessor.py",
        "habit\\core\\preprocessing\\custom_preprocessor_template.py",
        "habit\\core\\preprocessing\\histogram_standardization.py",
        "habit\\core\\preprocessing\\image_processor_pipeline.py",
        "habit\\core\\preprocessing\\load_image.py",
        "habit\\core\\preprocessing\\n4_correction.py",
        "habit\\core\\preprocessing\\preprocessor_factory.py",
        "habit\\core\\preprocessing\\registration.py",
        "habit\\core\\preprocessing\\zscore_normalization.py",
        "habit\\utils\\io_utils.py",
        "habit\\utils\\log_utils.py",
        "habit\\utils\\progress_utils.py",
        "habit\\utils\\visualization_utils.py",
        "scripts\\app_dilation_or_erosion.py",
        "scripts\\app_model_comparison_plots.py",
        "scripts\\app_of_machine_learning.py",
        "scripts\\day3_3_get_w_use_BGD.py",
        "scripts\\day3_6_correlation.py",
        "scripts\\get_supervoxel.py"
      ],
      "count": 73,
      "total_lines": 14037
    },
    "high_comments": {
      "files": [
        "config\\config_icc_analysis.yaml",
        "config\\config_image_preprocessing.yaml",
        "config\\config_image_preprocessing_dcm2nii.yaml",
        "config\\config_machine_learning.yaml",
        "config\\config_model_comparison.yaml",
        "config\\config_traditional_radiomics.yaml",
        "config\\parameter.yaml",
        "config\\parameter_habitat.yaml",
        "config\\params_supervoxel_radiomics.yaml",
        "config\\params_voxel_radiomics.yaml",
        "habit\\core\\machine_learning\\statistics\\hosmer_lemeshow_test.py"
      ],
      "count": 11,
      "total_lines": 985
    }
  }
}