# Habitat Analysis Configuration

# Data paths
data_dir: H:\Registration_ICC_structured
out_dir: H:\results_icc_testing

# Feature extraction settings
FeatureConstruction:
  voxel_level:
    method: kinetic(raw(pre_contrast), raw(LAP), raw(PVP), raw(delay_3min), timestamps)
    params:
      timestamps: F:\work\research\radiomics_TLSs\data\scan_time_of_phases.xlsx

  supervoxel_level:
    supervoxel_file_keyword: '*_supervoxel.nrrd'
    method: mean_voxel_features()
    params:
      params_file: ./config/params_supervoxel_radiomics.yaml

  # preprocessing_for_subject_level: 
  #   methods:
  #     - method: winsorize
  #       winsor_limits: [0.05, 0.05]
  #       global_normalize: true
  #     - method: minmax
  #       global_normalize: true
  #     - method: log
  #       global_normalize: true

  preprocessing_for_group_level:
    methods:
      - method: binning
        n_bins: 10
        bin_strategy: uniform
        global_normalize: false


# Habitat segmentation settings
HabitatsSegmention:
  # Clustering strategy: "one_step" or "two_step"
  # - one_step: Individual-level only (voxel-to-habitat clustering for each tumor)
  # - two_step: Individual-level + Population-level (voxel-to-supervoxel, then supervoxel-to-habitat across patients)
  clustering_mode: two_step  # one_step or two_step
  
  # Supervoxel clustering settings (Step 1: Individual-level clustering)
  supervoxel:
    algorithm: kmeans
    n_clusters: 50  # Used in two_step mode, or as max for one_step mode
    random_state: 42
    max_iter: 300
    n_init: 10
    
    # Settings for one_step mode: automatic cluster number selection for each tumor
    one_step_settings:
      min_clusters: 2           # Minimum number of clusters to test
      max_clusters: 10          # Maximum number of clusters to test
      selection_method: silhouette  # Method to determine optimal clusters: silhouette, calinski_harabasz, davies_bouldin, inertia
      plot_validation_curves: true  # Plot validation curves for each tumor
  
  # Habitat clustering settings (Step 2: Population-level clustering, only used in two_step mode)
  habitat:
    # training if you want to train a new model, testing if you want to use a pre-trained model, 
    # default feature preprocessing parameters are in os.path.join(self.out_dir, 'mean_values_of_all_supervoxels_features.csv')
    # default pre-trained model is os.path.join(self.out_dir, 'supervoxel2habitat_clustering_model.pkl')
    mode: testing  # training or testing  
    algorithm: kmeans  # kmeans or gmm
    max_clusters: 10
    habitat_cluster_selection_method: inertia  # inertia, silhouette, or calinski_harabasz, aic or bic for gmm
    best_n_clusters: 4   # Set to null for automatic selection
    random_state: 42
    max_iter: 300
    n_init: 10

# General settings
processes: 2  # Number of parallel processes
plot_curves: true  # Whether to generate and save plots
random_state: 42  # Random seed for reproducibility
debug: false  # Enable debug mode for detailed logging 