
import base64
exec(base64.b64decode(b'IiIiDQpWSUYgKFZhcmlhbmNlIEluZmxhdGlvbiBGYWN0b3IpIEZlYXR1cmUgU2VsZWN0b3INCg0KVXNlZCB0byBkZXRlY3QgYW5kIHJlbW92ZSBtdWx0aWNvbGxpbmVhciBmZWF0dXJlcw0KIiIiDQppbXBvcnQgcGFuZGFzIGFzIHBkDQppbXBvcnQgbnVtcHkgYXMgbnANCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQNCmltcG9ydCBzZWFib3JuIGFzIHNucw0KaW1wb3J0IG9zDQpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdCwgT3B0aW9uYWwsIFR1cGxlLCBEaWN0LCBVbmlvbg0KZnJvbSBzdGF0c21vZGVscy5zdGF0cy5vdXRsaWVyc19pbmZsdWVuY2UgaW1wb3J0IHZhcmlhbmNlX2luZmxhdGlvbl9mYWN0b3INCg0KZnJvbSAuc2VsZWN0b3JfcmVnaXN0cnkgaW1wb3J0IHJlZ2lzdGVyX3NlbGVjdG9yDQoNCkByZWdpc3Rlcl9zZWxlY3RvcigndmlmJykNCmRlZiB2aWZfc2VsZWN0b3IoWDogcGQuRGF0YUZyYW1lLCANCiAgICAgICAgICAgICAgICBtYXhfdmlmOiBmbG9hdCA9IDEwLjAsIA0KICAgICAgICAgICAgICAgIHZpc3VhbGl6ZTogYm9vbCA9IEZhbHNlLCANCiAgICAgICAgICAgICAgICBvdXRkaXI6IE9wdGlvbmFsW3N0cl0gPSBOb25lLA0KICAgICAgICAgICAgICAgIHNlbGVjdGVkX2ZlYXR1cmVzOiBPcHRpb25hbFtMaXN0W3N0cl1dID0gTm9uZSkgLT4gVW5pb25bTGlzdFtzdHJdLCBUdXBsZVtMaXN0W3N0cl0sIHBkLkRhdGFGcmFtZSwgRGljdFtzdHIsIGZsb2F0XV1dOg0KICAgICIiIg0KICAgIFNlbGVjdCBmZWF0dXJlcyBiYXNlZCBvbiBWSUYgKFZhcmlhbmNlIEluZmxhdGlvbiBGYWN0b3IpDQogICAgDQogICAgQXJnczoNCiAgICAgICAgWDogRmVhdHVyZSBkYXRhDQogICAgICAgIG1heF92aWY6IE1heGltdW0gYWxsb3dlZCBWSUYgdmFsdWUsIGZlYXR1cmVzIHdpdGggVklGIGFib3ZlIHRoaXMgd2lsbCBiZSByZW1vdmVkDQogICAgICAgIHZpc3VhbGl6ZTogV2hldGhlciB0byBnZW5lcmF0ZSB2aXN1YWxpemF0aW9uIHBsb3RzDQogICAgICAgIG91dGRpcjogT3V0cHV0IGRpcmVjdG9yeSwgcmVxdWlyZWQgaWYgdmlzdWFsaXplIGlzIFRydWUNCiAgICAgICAgc2VsZWN0ZWRfZmVhdHVyZXM6IExpc3Qgb2YgYWxyZWFkeSBzZWxlY3RlZCBmZWF0dXJlcywgaWYgTm9uZSB1c2UgYWxsIGNvbHVtbnMgb2YgWA0KICAgICAgICANCiAgICBSZXR1cm5zOg0KICAgICAgICBVbmlvbltMaXN0W3N0cl0sIFR1cGxlW0xpc3Rbc3RyXSwgcGQuRGF0YUZyYW1lLCBEaWN0W3N0ciwgZmxvYXRdXV06IA0KICAgICAgICAgICAgLSBJZiBkZXRhaWxlZF9vdXRwdXQgaXMgRmFsc2UsIHJldHVybnMgb25seSB0aGUgbGlzdCBvZiBzZWxlY3RlZCBmZWF0dXJlcw0KICAgICAgICAgICAgLSBJZiBkZXRhaWxlZF9vdXRwdXQgaXMgVHJ1ZSwgcmV0dXJucyAoc2VsZWN0ZWQgZmVhdHVyZXMgbGlzdCwgVklGIERhdGFGcmFtZSwgZXhjbHVkZWQgZmVhdHVyZXMgZGljdGlvbmFyeSkNCiAgICAiIiINCiAgICBpZiBzZWxlY3RlZF9mZWF0dXJlcyBpcyBOb25lOg0KICAgICAgICBzZWxlY3RlZF9mZWF0dXJlcyA9IFguY29sdW1ucy50b2xpc3QoKQ0KICAgIA0KICAgICMgT25seSB1c2Ugc2VsZWN0ZWQgZmVhdHVyZXMNCiAgICBkYXRhID0gWFtzZWxlY3RlZF9mZWF0dXJlc10uY29weSgpDQogICAgDQogICAgIyBDYWxjdWxhdGUgaW5pdGlhbCBWSUYNCiAgICB2aWYgPSBwZC5EYXRhRnJhbWUoKQ0KICAgIHZpZlsiVklGIl0gPSBbdmFyaWFuY2VfaW5mbGF0aW9uX2ZhY3RvcihkYXRhLnZhbHVlcywgaSkgZm9yIGkgaW4gcmFuZ2UoZGF0YS5zaGFwZVsxXSldDQogICAgdmlmWyJmZWF0dXJlIl0gPSBkYXRhLmNvbHVtbnMNCiAgICANCiAgICAjIFNvcnQNCiAgICB2aWYgPSB2aWYuc29ydF92YWx1ZXMoYnk9IlZJRiIsIGFzY2VuZGluZz1GYWxzZSkNCiAgICANCiAgICAjIFNhdmUgaW5pdGlhbCBWSUYNCiAgICBpbml0aWFsX3ZpZiA9IHZpZi5jb3B5KCkNCiAgICANCiAgICAjIFNhdmUgZXhjbHVkZWQgZmVhdHVyZXMgYW5kIHRoZWlyIFZJRiB2YWx1ZXMNCiAgICBleGNsdWRlZF9mZWF0dXJlcyA9IHt9DQogICAgDQogICAgIyBJdGVyYXRpdmVseSByZW1vdmUgZmVhdHVyZXMgd2l0aCBWSUYgYWJvdmUgdGhyZXNob2xkDQogICAgd2hpbGUgKHZpZlsiVklGIl0gPiBtYXhfdmlmKS5hbnkoKToNCiAgICAgICAgIyBHZXQgZmVhdHVyZSB3aXRoIGhpZ2hlc3QgVklGDQogICAgICAgIG1heF92aWZfZmVhdHVyZSA9IHZpZi5pbG9jWzBdWyJmZWF0dXJlIl0NCiAgICAgICAgbWF4X3ZpZl92YWx1ZSA9IHZpZi5pbG9jWzBdWyJWSUYiXQ0KICAgICAgICANCiAgICAgICAgIyBBZGQgdG8gZXhjbHVkZWQgbGlzdA0KICAgICAgICBleGNsdWRlZF9mZWF0dXJlc1ttYXhfdmlmX2ZlYXR1cmVdID0gbWF4X3ZpZl92YWx1ZQ0KICAgICAgICANCiAgICAgICAgIyBSZW1vdmUgZmVhdHVyZSBmcm9tIGRhdGENCiAgICAgICAgZGF0YSA9IGRhdGEuZHJvcChtYXhfdmlmX2ZlYXR1cmUsIGF4aXM9MSkNCiAgICAgICAgDQogICAgICAgICMgU3RvcCBpZiB0b28gZmV3IGZlYXR1cmVzIHJlbWFpbg0KICAgICAgICBpZiBkYXRhLnNoYXBlWzFdIDwgMjoNCiAgICAgICAgICAgIHByaW50KGYiV2FybmluZzogVG9vIGZldyBmZWF0dXJlcyByZW1haW5pbmcsIHN0b3BwaW5nIFZJRiBzZWxlY3Rpb24iKQ0KICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgDQogICAgICAgICMgUmVjYWxjdWxhdGUgVklGDQogICAgICAgIHZpZiA9IHBkLkRhdGFGcmFtZSgpDQogICAgICAgIHZpZlsiVklGIl0gPSBbdmFyaWFuY2VfaW5mbGF0aW9uX2ZhY3RvcihkYXRhLnZhbHVlcywgaSkgZm9yIGkgaW4gcmFuZ2UoZGF0YS5zaGFwZVsxXSldDQogICAgICAgIHZpZlsiZmVhdHVyZSJdID0gZGF0YS5jb2x1bW5zDQogICAgICAgIA0KICAgICAgICAjIFNvcnQNCiAgICAgICAgdmlmID0gdmlmLnNvcnRfdmFsdWVzKGJ5PSJWSUYiLCBhc2NlbmRpbmc9RmFsc2UpDQogICAgDQogICAgIyBHZXQgcmV0YWluZWQgZmVhdHVyZXMNCiAgICBzZWxlY3RlZCA9IGRhdGEuY29sdW1ucy50b2xpc3QoKQ0KICAgIA0KICAgICMgT3V0cHV0IHJlc3VsdHMNCiAgICBwcmludChmIlZJRiBzZWxlY3Rpb246IFNlbGVjdGVkIHtsZW4oc2VsZWN0ZWQpfSBmZWF0dXJlcyBmcm9tIHtsZW4oc2VsZWN0ZWRfZmVhdHVyZXMpfSBmZWF0dXJlcywgcmVtb3ZlZCB7bGVuKGV4Y2x1ZGVkX2ZlYXR1cmVzKX0gZmVhdHVyZXMiKQ0KICAgIHByaW50KGYiTWF4aW11bSBWSUYgdmFsdWU6IHt2aWZbJ1ZJRiddLm1heCgpIGlmIG5vdCB2aWYuZW1wdHkgZWxzZSAwfSIpDQogICAgDQogICAgIyBWaXN1YWxpemF0aW9uDQogICAgaWYgdmlzdWFsaXplIGFuZCBvdXRkaXI6DQogICAgICAgIG9zLm1ha2VkaXJzKG91dGRpciwgZXhpc3Rfb2s9VHJ1ZSkNCiAgICAgICAgDQogICAgICAgICMgQ3JlYXRlIFZJRiBiYXIgcGxvdA0KICAgICAgICBwbHQuZmlndXJlKGZpZ3NpemU9KDEyLCA2KSkNCiAgICAgICAgDQogICAgICAgICMgU29ydCBieSBWSUYgdmFsdWUNCiAgICAgICAgaW5pdGlhbF92aWYgPSBpbml0aWFsX3ZpZi5zb3J0X3ZhbHVlcyhieT0iVklGIiwgYXNjZW5kaW5nPVRydWUpDQogICAgICAgIA0KICAgICAgICAjIFNldCBjb2xvcnMNCiAgICAgICAgY29sb3JzID0gWydyZWQnIGlmIGZlYXR1cmUgaW4gZXhjbHVkZWRfZmVhdHVyZXMgZWxzZSAnYmx1ZScgZm9yIGZlYXR1cmUgaW4gaW5pdGlhbF92aWZbJ2ZlYXR1cmUnXV0NCiAgICAgICAgDQogICAgICAgICMgRHJhdyBiYXIgcGxvdA0KICAgICAgICBiYXJzID0gcGx0LmJhcmgoaW5pdGlhbF92aWZbJ2ZlYXR1cmUnXSwgaW5pdGlhbF92aWZbJ1ZJRiddLCBjb2xvcj1jb2xvcnMpDQogICAgICAgIA0KICAgICAgICAjIEFkZCB0aHJlc2hvbGQgbGluZQ0KICAgICAgICBwbHQuYXh2bGluZSh4PW1heF92aWYsIGNvbG9yPSdyZWQnLCBsaW5lc3R5bGU9Jy0tJywgbGFiZWw9ZidWSUYgdGhyZXNob2xkID0ge21heF92aWZ9JykNCiAgICAgICAgDQogICAgICAgICMgQWRkIGxhYmVscyBhbmQgdGl0bGUNCiAgICAgICAgcGx0LnhsYWJlbCgnVklGIFZhbHVlJykNCiAgICAgICAgcGx0LnlsYWJlbCgnRmVhdHVyZScpDQogICAgICAgIHBsdC50aXRsZSgnRmVhdHVyZSBWSUYgVmFsdWVzIChSZWQgaW5kaWNhdGVzIHJlbW92ZWQgZmVhdHVyZXMpJykNCiAgICAgICAgcGx0LmxlZ2VuZCgpDQogICAgICAgIA0KICAgICAgICAjIEFkanVzdCBsYXlvdXQNCiAgICAgICAgcGx0LnRpZ2h0X2xheW91dCgpDQogICAgICAgIA0KICAgICAgICAjIFNhdmUgcGxvdA0KICAgICAgICBwbHQuc2F2ZWZpZyhvcy5wYXRoLmpvaW4ob3V0ZGlyLCAndmlmX2FuYWx5c2lzLnBuZycpLCBkcGk9MzAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQ0KICAgICAgICBwbHQuY2xvc2UoKQ0KICAgICAgICANCiAgICAgICAgIyBTYXZlIFZJRiB2YWx1ZXMNCiAgICAgICAgaW5pdGlhbF92aWYudG9fY3N2KG9zLnBhdGguam9pbihvdXRkaXIsICd2aWZfdmFsdWVzLmNzdicpLCBpbmRleD1GYWxzZSkNCiAgICAgICAgDQogICAgICAgICMgU2F2ZSBleGNsdWRlZCBmZWF0dXJlcw0KICAgICAgICBleGNsdWRlZF9kZiA9IHBkLkRhdGFGcmFtZSh7DQogICAgICAgICAgICAnZmVhdHVyZSc6IGxpc3QoZXhjbHVkZWRfZmVhdHVyZXMua2V5cygpKSwNCiAgICAgICAgICAgICdWSUYnOiBsaXN0KGV4Y2x1ZGVkX2ZlYXR1cmVzLnZhbHVlcygpKQ0KICAgICAgICB9KQ0KICAgICAgICBleGNsdWRlZF9kZi50b19jc3Yob3MucGF0aC5qb2luKG91dGRpciwgJ2V4Y2x1ZGVkX2ZlYXR1cmVzLmNzdicpLCBpbmRleD1GYWxzZSkNCiAgICANCiAgICByZXR1cm4gc2VsZWN0ZWQsIHZpZiwgZXhjbHVkZWRfZmVhdHVyZXMg').decode())
