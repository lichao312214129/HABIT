
import base64
exec(base64.b64decode(b'ZnJvbSB0eXBpbmcgaW1wb3J0IERpY3QsIEFueSwgT3B0aW9uYWwsIFVuaW9uLCBMaXN0LCBUdXBsZSwgU2VxdWVuY2UNCmltcG9ydCBTaW1wbGVJVEsgYXMgc2l0aw0KaW1wb3J0IG9zDQppbXBvcnQgbnVtcHkgYXMgbnANCmZyb20gLmJhc2VfcHJlcHJvY2Vzc29yIGltcG9ydCBCYXNlUHJlcHJvY2Vzc29yDQpmcm9tIC5wcmVwcm9jZXNzb3JfZmFjdG9yeSBpbXBvcnQgUHJlcHJvY2Vzc29yRmFjdG9yeQ0KDQpAUHJlcHJvY2Vzc29yRmFjdG9yeS5yZWdpc3RlcigibG9hZF9pbWFnZSIpDQpjbGFzcyBMb2FkSW1hZ2VQcmVwcm9jZXNzb3IoQmFzZVByZXByb2Nlc3Nvcik6DQogICAgIiIiTG9hZCBpbWFnZXMgZnJvbSBmaWxlIHBhdGhzIGFuZCBjb252ZXJ0IHRoZW0gdG8gU2ltcGxlSVRLIEltYWdlIG9iamVjdHMuDQogICAgDQogICAgVGhpcyBwcmVwcm9jZXNzb3IgdGFrZXMga2V5cyBmcm9tIHRoZSBzdWJqZWN0X2RhdGEgZGljdGlvbmFyeSwgbG9hZHMgdGhlIGNvcnJlc3BvbmRpbmcNCiAgICBmaWxlcyBhcyBTaW1wbGVJVEsgaW1hZ2VzLCBhbmQgcmVwbGFjZXMgdGhlIGZpbGUgcGF0aHMgd2l0aCB0aGUgbG9hZGVkIGltYWdlIG9iamVjdHMuDQogICAgS2V5cyBub3Qgc3BlY2lmaWVkIHdpbGwgcmVtYWluIHVuY2hhbmdlZC4NCiAgICAiIiINCiAgICANCiAgICBkZWYgX19pbml0X18oDQogICAgICAgIHNlbGYsDQogICAgICAgIGtleXM6IFVuaW9uW3N0ciwgTGlzdFtzdHJdXSwNCiAgICAgICAgYWxsb3dfbWlzc2luZ19rZXlzOiBib29sID0gRmFsc2UsDQogICAgICAgICoqa3dhcmdzDQogICAgKToNCiAgICAgICAgIiIiSW5pdGlhbGl6ZSB0aGUgTG9hZEltYWdlIHByZXByb2Nlc3Nvci4NCiAgICAgICAgDQogICAgICAgIEFyZ3M6DQogICAgICAgICAgICBrZXlzIChVbmlvbltzdHIsIExpc3Rbc3RyXV0pOiBLZXlzIG9mIHRoZSBpdGVtcyB0byBsb2FkIGFzIFNpbXBsZUlUSyBpbWFnZXMuDQogICAgICAgICAgICBhbGxvd19taXNzaW5nX2tleXMgKGJvb2wpOiBJZiBUcnVlLCBhbGxvd3MgbWlzc2luZyBrZXlzIGluIHRoZSBpbnB1dCBkYXRhLg0KICAgICAgICAgICAgKiprd2FyZ3M6IEFkZGl0aW9uYWwgcGFyYW1ldGVycy4NCiAgICAgICAgIiIiDQogICAgICAgIHN1cGVyKCkuX19pbml0X18oa2V5cz1rZXlzLCBhbGxvd19taXNzaW5nX2tleXM9YWxsb3dfbWlzc2luZ19rZXlzKQ0KICAgICAgICANCiAgICAgICAgIyBDb252ZXJ0IHNpbmdsZSBrZXkgdG8gbGlzdA0KICAgICAgICBpZiBpc2luc3RhbmNlKGtleXMsIHN0cik6DQogICAgICAgICAgICBrZXlzID0gW2tleXNdDQogICAgICAgIHNlbGYua2V5cyA9IGtleXMNCiAgICAgICAgDQogICAgZGVmIF9sb2FkX3NpdGtfaW1hZ2Uoc2VsZiwgaW1hZ2VfcGF0aDogc3RyKSAtPiBzaXRrLkltYWdlOg0KICAgICAgICAiIiJMb2FkIGEgU2ltcGxlSVRLIGltYWdlIGZyb20gYSBmaWxlIHBhdGguDQogICAgICAgIA0KICAgICAgICBBcmdzOg0KICAgICAgICAgICAgaW1hZ2VfcGF0aCAoc3RyKTogUGF0aCB0byB0aGUgaW1hZ2UgZmlsZQ0KICAgICAgICAgICAgDQogICAgICAgIFJldHVybnM6DQogICAgICAgICAgICBzaXRrLkltYWdlOiBMb2FkZWQgU2ltcGxlSVRLIGltYWdlDQogICAgICAgICAgICANCiAgICAgICAgUmFpc2VzOg0KICAgICAgICAgICAgRmlsZU5vdEZvdW5kRXJyb3I6IElmIHRoZSBpbWFnZSBmaWxlIGRvZXMgbm90IGV4aXN0DQogICAgICAgICAgICBSdW50aW1lRXJyb3I6IElmIHRoZSBpbWFnZSBjYW5ub3QgYmUgbG9hZGVkDQogICAgICAgICIiIg0KICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoaW1hZ2VfcGF0aCk6DQogICAgICAgICAgICByYWlzZSBGaWxlTm90Rm91bmRFcnJvcihmIkltYWdlIGZpbGUge2ltYWdlX3BhdGh9IGRvZXMgbm90IGV4aXN0IikNCiAgICAgICAgICAgIA0KICAgICAgICB0cnk6DQogICAgICAgICAgICAjIExvYWQgdGhlIGltYWdlIHdpdGggU2ltcGxlSVRLDQogICAgICAgICAgICBzaXRrX2ltYWdlID0gc2l0ay5SZWFkSW1hZ2UoaW1hZ2VfcGF0aCkNCiAgICAgICAgICAgIHJldHVybiBzaXRrX2ltYWdlDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgICAgIHJhaXNlIFJ1bnRpbWVFcnJvcihmIkZhaWxlZCB0byBsb2FkIGltYWdlIHtpbWFnZV9wYXRofToge2V9IikNCiAgICAgICAgDQogICAgZGVmIF9fY2FsbF9fKHNlbGYsIGRhdGE6IERpY3Rbc3RyLCBBbnldKSAtPiBEaWN0W3N0ciwgQW55XToNCiAgICAgICAgIiIiTG9hZCBzcGVjaWZpZWQga2V5cyBmcm9tIHRoZSBkYXRhIGRpY3Rpb25hcnkgYXMgU2ltcGxlSVRLIGltYWdlcy4NCiAgICAgICAgDQogICAgICAgIEFyZ3M6DQogICAgICAgICAgICBkYXRhIChEaWN0W3N0ciwgQW55XSk6IElucHV0IGRhdGEgZGljdGlvbmFyeSBjb250YWluaW5nIGZpbGUgcGF0aHMuDQogICAgICAgICAgICANCiAgICAgICAgUmV0dXJuczoNCiAgICAgICAgICAgIERpY3Rbc3RyLCBBbnldOiBEYXRhIGRpY3Rpb25hcnkgd2l0aCBmaWxlIHBhdGhzIHJlcGxhY2VkIGJ5IFNpbXBsZUlUSyBpbWFnZXMuDQogICAgICAgICIiIg0KICAgICAgICBzZWxmLl9jaGVja19rZXlzKGRhdGEpDQogICAgICAgIA0KICAgICAgICAjIFByb2Nlc3MgZWFjaCBzcGVjaWZpZWQga2V5DQogICAgICAgIGZvciBrZXkgaW4gc2VsZi5rZXlzOg0KICAgICAgICAgICAgIyBTa2lwIGlmIGtleSBpcyBtaXNzaW5nIGFuZCB3ZSBhbGxvdyBtaXNzaW5nIGtleXMNCiAgICAgICAgICAgIGlmIGtleSBub3QgaW4gZGF0YToNCiAgICAgICAgICAgICAgICBpZiBzZWxmLmFsbG93X21pc3Npbmdfa2V5czoNCiAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICByYWlzZSBLZXlFcnJvcihmIktleSB7a2V5fSBub3QgZm91bmQgaW4gZGF0YSBkaWN0aW9uYXJ5IikNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICMgR2V0IHRoZSBmaWxlIHBhdGgNCiAgICAgICAgICAgIGltYWdlX3BhdGggPSBkYXRhW2tleV0NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgIyBTa2lwIGlmIG5vdCBhIHN0cmluZyAoYWxyZWFkeSBwcm9jZXNzZWQgb3Igbm90IGEgcGF0aCkNCiAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKGltYWdlX3BhdGgsIHN0cik6DQogICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAjIExvYWQgdGhlIGltYWdlDQogICAgICAgICAgICAgICAgc2l0a19pbWFnZSA9IHNlbGYuX2xvYWRfc2l0a19pbWFnZShpbWFnZV9wYXRoKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICMgUmVwbGFjZSB0aGUgZmlsZSBwYXRoIHdpdGggdGhlIFNpbXBsZUlUSyBpbWFnZQ0KICAgICAgICAgICAgICAgIGRhdGFba2V5XSA9IHNpdGtfaW1hZ2UNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAjIEluaXRpYWxpemUgb3IgdXBkYXRlIG1ldGFkYXRhDQogICAgICAgICAgICAgICAgbWV0YV9rZXkgPSBmIntrZXl9X21ldGFfZGljdCINCiAgICAgICAgICAgICAgICBpZiBtZXRhX2tleSBub3QgaW4gZGF0YToNCiAgICAgICAgICAgICAgICAgICAgZGF0YVttZXRhX2tleV0gPSB7fQ0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAjIFN0b3JlIGltcG9ydGFudCBpbWFnZSBwcm9wZXJ0aWVzIGluIG1ldGFkYXRhDQogICAgICAgICAgICAgICAgZGF0YVttZXRhX2tleV1bInNwYWNpbmciXSA9IHNpdGtfaW1hZ2UuR2V0U3BhY2luZygpDQogICAgICAgICAgICAgICAgZGF0YVttZXRhX2tleV1bInNpemUiXSA9IHNpdGtfaW1hZ2UuR2V0U2l6ZSgpDQogICAgICAgICAgICAgICAgZGF0YVttZXRhX2tleV1bIm9yaWdpbiJdID0gc2l0a19pbWFnZS5HZXRPcmlnaW4oKQ0KICAgICAgICAgICAgICAgIGRhdGFbbWV0YV9rZXldWyJkaXJlY3Rpb24iXSA9IHNpdGtfaW1hZ2UuR2V0RGlyZWN0aW9uKCkNCiAgICAgICAgICAgICAgICBkYXRhW21ldGFfa2V5XVsicGl4ZWxfdHlwZSJdID0gc2l0a19pbWFnZS5HZXRQaXhlbElEVHlwZUFzU3RyaW5nKCkNCiAgICAgICAgICAgICAgICBkYXRhW21ldGFfa2V5XVsiaW1hZ2VfcGF0aCJdID0gaW1hZ2VfcGF0aCAgIyBBZGQgaW1hZ2UgcGF0aCB0byBtZXRhZGF0YQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICAgICAgICAgIHByaW50KGYiRXJyb3IgbG9hZGluZyBpbWFnZSBmb3Iga2V5IHtrZXl9OiB7ZX0iKQ0KICAgICAgICAgICAgICAgIGlmIG5vdCBzZWxmLmFsbG93X21pc3Npbmdfa2V5czoNCiAgICAgICAgICAgICAgICAgICAgcmFpc2UNCiAgICA=').decode())
