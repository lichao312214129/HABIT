
import base64
exec(base64.b64decode(b'IiIiDQpBTk9WQSBGZWF0dXJlIFNlbGVjdG9yDQoNCkltcGxlbWVudGF0aW9uIG9mIEFOT1ZBIEYtdmFsdWUgYmFzZWQgZmVhdHVyZSBzZWxlY3Rpb24gZm9yIGNsYXNzaWZpY2F0aW9uIHByb2JsZW1zLg0KIiIiDQoNCmltcG9ydCBudW1weSBhcyBucA0KaW1wb3J0IHBhbmRhcyBhcyBwZA0KZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIFR1cGxlLCBBbnksIERpY3QsIE9wdGlvbmFsLCBVbmlvbg0KaW1wb3J0IG9zDQppbXBvcnQganNvbg0KZnJvbSBza2xlYXJuLmZlYXR1cmVfc2VsZWN0aW9uIGltcG9ydCBTZWxlY3RLQmVzdCwgZl9jbGFzc2lmDQppbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0DQppbXBvcnQgc2VhYm9ybiBhcyBzbnMNCg0KZnJvbSAuc2VsZWN0b3JfcmVnaXN0cnkgaW1wb3J0IHJlZ2lzdGVyX3NlbGVjdG9yDQoNCkByZWdpc3Rlcl9zZWxlY3RvcignYW5vdmEnKQ0KZGVmIGFub3ZhX3NlbGVjdG9yKA0KICAgICAgICBYOiBwZC5EYXRhRnJhbWUsDQogICAgICAgIHk6IHBkLlNlcmllcywNCiAgICAgICAgc2VsZWN0ZWRfZmVhdHVyZXM6IExpc3Rbc3RyXSwNCiAgICAgICAgbl9mZWF0dXJlc190b19zZWxlY3Q6IGludCA9IDIwLA0KICAgICAgICBwbG90X2ltcG9ydGFuY2U6IGJvb2wgPSBUcnVlLA0KICAgICAgICBvdXRkaXI6IE9wdGlvbmFsW3N0cl0gPSBOb25lLA0KICAgICAgICAqKmt3YXJncw0KICAgICkgLT4gTGlzdFtzdHJdOg0KICAgICIiIg0KICAgIEFwcGx5IEFOT1ZBIEYtdmFsdWUgYmFzZWQgZmVhdHVyZSBzZWxlY3Rpb24NCiAgICANCiAgICBBcmdzOg0KICAgICAgICBYOiBGZWF0dXJlIGRhdGENCiAgICAgICAgeTogVGFyZ2V0IHZhcmlhYmxlDQogICAgICAgIHNlbGVjdGVkX2ZlYXR1cmVzOiBMaXN0IG9mIGZlYXR1cmVzIHRvIHNlbGVjdCBmcm9tDQogICAgICAgIG5fZmVhdHVyZXNfdG9fc2VsZWN0OiBOdW1iZXIgb2YgZmVhdHVyZXMgdG8gc2VsZWN0DQogICAgICAgIHBsb3RfaW1wb3J0YW5jZTogV2hldGhlciB0byBwbG90IGZlYXR1cmUgaW1wb3J0YW5jZQ0KICAgICAgICBvdXRkaXI6IE91dHB1dCBkaXJlY3RvcnkgZm9yIHJlc3VsdHMNCiAgICAgICAgKiprd2FyZ3M6IEFkZGl0aW9uYWwgYXJndW1lbnRzDQogICAgICAgIA0KICAgIFJldHVybnM6DQogICAgICAgIExpc3Rbc3RyXTogU2VsZWN0ZWQgZmVhdHVyZSBuYW1lcw0KICAgICIiIg0KICAgICMgRW5zdXJlIG5fZmVhdHVyZXNfdG9fc2VsZWN0IGlzIHZhbGlkDQogICAgbl9mZWF0dXJlc190b19zZWxlY3QgPSBtaW4obl9mZWF0dXJlc190b19zZWxlY3QsIGxlbihzZWxlY3RlZF9mZWF0dXJlcykpDQogICAgDQogICAgIyBHZXQgZmVhdHVyZSBzdWJzZXQNCiAgICBYX3N1YnNldCA9IFhbc2VsZWN0ZWRfZmVhdHVyZXNdDQogICAgDQogICAgIyBBcHBseSBBTk9WQSBGLXRlc3QNCiAgICBzZWxlY3RvciA9IFNlbGVjdEtCZXN0KGZfY2xhc3NpZiwgaz1uX2ZlYXR1cmVzX3RvX3NlbGVjdCkNCiAgICBzZWxlY3Rvci5maXQoWF9zdWJzZXQsIHkpDQogICAgDQogICAgIyBHZXQgc2VsZWN0ZWQgZmVhdHVyZSBpbmRpY2VzIGFuZCBzY29yZXMNCiAgICBzZWxlY3RlZF9pbmRpY2VzID0gc2VsZWN0b3IuZ2V0X3N1cHBvcnQoaW5kaWNlcz1UcnVlKQ0KICAgIHNjb3JlcyA9IHNlbGVjdG9yLnNjb3Jlc18NCiAgICANCiAgICAjIENyZWF0ZSBmZWF0dXJlIHJhbmtpbmcNCiAgICBmZWF0dXJlX3JhbmtpbmcgPSBwZC5EYXRhRnJhbWUoew0KICAgICAgICAnZmVhdHVyZSc6IHNlbGVjdGVkX2ZlYXR1cmVzLA0KICAgICAgICAnc2NvcmUnOiBzY29yZXMsDQogICAgICAgICdwdmFsdWUnOiBzZWxlY3Rvci5wdmFsdWVzXywNCiAgICAgICAgJ3NlbGVjdGVkJzogc2VsZWN0b3IuZ2V0X3N1cHBvcnQoKQ0KICAgIH0pDQogICAgDQogICAgIyBTb3J0IGJ5IHNjb3JlDQogICAgZmVhdHVyZV9yYW5raW5nID0gZmVhdHVyZV9yYW5raW5nLnNvcnRfdmFsdWVzKCdzY29yZScsIGFzY2VuZGluZz1GYWxzZSkucmVzZXRfaW5kZXgoZHJvcD1UcnVlKQ0KICAgIA0KICAgICMgR2V0IHNlbGVjdGVkIGZlYXR1cmUgbmFtZXMNCiAgICBzZWxlY3RlZF9mZWF0dXJlc19yZXN1bHQgPSBbc2VsZWN0ZWRfZmVhdHVyZXNbaV0gZm9yIGkgaW4gc2VsZWN0ZWRfaW5kaWNlc10NCiAgICANCiAgICAjIFNhdmUgcmVzdWx0cyBpZiBvdXRwdXQgZGlyZWN0b3J5IHNwZWNpZmllZA0KICAgIGlmIG91dGRpcjoNCiAgICAgICAgb3MubWFrZWRpcnMob3V0ZGlyLCBleGlzdF9vaz1UcnVlKQ0KICAgICAgICANCiAgICAgICAgIyBTYXZlIHNlbGVjdGVkIGZlYXR1cmVzDQogICAgICAgIHJlc3VsdF9maWxlID0gb3MucGF0aC5qb2luKG91dGRpciwgJ2Fub3ZhX3NlbGVjdGVkX2ZlYXR1cmVzLmpzb24nKQ0KICAgICAgICB3aXRoIG9wZW4ocmVzdWx0X2ZpbGUsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoNCiAgICAgICAgICAgIGpzb24uZHVtcCh7DQogICAgICAgICAgICAgICAgJ3NlbGVjdGVkX2ZlYXR1cmVzJzogc2VsZWN0ZWRfZmVhdHVyZXNfcmVzdWx0LA0KICAgICAgICAgICAgICAgICduX2ZlYXR1cmVzX3NlbGVjdGVkJzogbGVuKHNlbGVjdGVkX2ZlYXR1cmVzX3Jlc3VsdCksDQogICAgICAgICAgICAgICAgJ29yaWdpbmFsX2ZlYXR1cmVfY291bnQnOiBsZW4oc2VsZWN0ZWRfZmVhdHVyZXMpDQogICAgICAgICAgICB9LCBmLCBlbnN1cmVfYXNjaWk9RmFsc2UsIGluZGVudD00KQ0KICAgICAgICAgICAgDQogICAgICAgICMgU2F2ZSBmZWF0dXJlIHJhbmtpbmcNCiAgICAgICAgcmFua2luZ19maWxlID0gb3MucGF0aC5qb2luKG91dGRpciwgJ2Fub3ZhX2ZlYXR1cmVfcmFua2luZy5jc3YnKQ0KICAgICAgICBmZWF0dXJlX3JhbmtpbmcudG9fY3N2KHJhbmtpbmdfZmlsZSwgaW5kZXg9RmFsc2UpDQogICAgICAgIA0KICAgICAgICAjIFBsb3QgZmVhdHVyZSBpbXBvcnRhbmNlDQogICAgICAgIGlmIHBsb3RfaW1wb3J0YW5jZToNCiAgICAgICAgICAgIHBsdC5maWd1cmUoZmlnc2l6ZT0oMTIsIDgpKQ0KICAgICAgICAgICAgc25zLmJhcnBsb3QoeD0nc2NvcmUnLCB5PSdmZWF0dXJlJywgZGF0YT1mZWF0dXJlX3JhbmtpbmcuaGVhZChtaW4oMjAsIGxlbihzZWxlY3RlZF9mZWF0dXJlcykpKSkNCiAgICAgICAgICAgIHBsdC50aXRsZSgnQU5PVkEgRi1TY29yZSBGZWF0dXJlIEltcG9ydGFuY2UnKQ0KICAgICAgICAgICAgcGx0LnRpZ2h0X2xheW91dCgpDQogICAgICAgICAgICBwbHQuc2F2ZWZpZyhvcy5wYXRoLmpvaW4ob3V0ZGlyLCAnYW5vdmFfZmVhdHVyZV9pbXBvcnRhbmNlLnBkZicpKQ0KICAgICAgICAgICAgcGx0LmNsb3NlKCkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgIyBQbG90IGZlYXR1cmUgaW1wb3J0YW5jZSB3aXRoIHAtdmFsdWVzDQogICAgICAgICAgICBwbHQuZmlndXJlKGZpZ3NpemU9KDEyLCA4KSkNCiAgICAgICAgICAgIHRvcF9mZWF0dXJlcyA9IGZlYXR1cmVfcmFua2luZy5oZWFkKG1pbigyMCwgbGVuKHNlbGVjdGVkX2ZlYXR1cmVzKSkpDQogICAgICAgICAgICBheCA9IHNucy5iYXJwbG90KHg9J3Njb3JlJywgeT0nZmVhdHVyZScsIGRhdGE9dG9wX2ZlYXR1cmVzKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICAjIEFkZCBwLXZhbHVlIGFubm90YXRpb25zDQogICAgICAgICAgICBmb3IgaSwgZmVhdHVyZSBpbiBlbnVtZXJhdGUodG9wX2ZlYXR1cmVzWydmZWF0dXJlJ10pOg0KICAgICAgICAgICAgICAgIHBfdmFsdWUgPSB0b3BfZmVhdHVyZXMubG9jW3RvcF9mZWF0dXJlc1snZmVhdHVyZSddID09IGZlYXR1cmUsICdwdmFsdWUnXS52YWx1ZXNbMF0NCiAgICAgICAgICAgICAgICBzdGFycyA9ICcnDQogICAgICAgICAgICAgICAgaWYgcF92YWx1ZSA8IDAuMDAxOg0KICAgICAgICAgICAgICAgICAgICBzdGFycyA9ICcqKionDQogICAgICAgICAgICAgICAgZWxpZiBwX3ZhbHVlIDwgMC4wMToNCiAgICAgICAgICAgICAgICAgICAgc3RhcnMgPSAnKionDQogICAgICAgICAgICAgICAgZWxpZiBwX3ZhbHVlIDwgMC4wNToNCiAgICAgICAgICAgICAgICAgICAgc3RhcnMgPSAnKicNCiAgICAgICAgICAgICAgICBheC50ZXh0KHRvcF9mZWF0dXJlcy5sb2NbdG9wX2ZlYXR1cmVzWydmZWF0dXJlJ10gPT0gZmVhdHVyZSwgJ3Njb3JlJ10udmFsdWVzWzBdICsgMC41LCANCiAgICAgICAgICAgICAgICAgICAgICAgIGksIHN0YXJzLCBoYT0nbGVmdCcsIHZhPSdjZW50ZXInKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBwbHQudGl0bGUoJ0FOT1ZBIEYtU2NvcmUgRmVhdHVyZSBJbXBvcnRhbmNlIHdpdGggUC12YWx1ZXMgKCogcDwwLjA1LCAqKiBwPDAuMDEsICoqKiBwPDAuMDAxKScpDQogICAgICAgICAgICBwbHQudGlnaHRfbGF5b3V0KCkNCiAgICAgICAgICAgIHBsdC5zYXZlZmlnKG9zLnBhdGguam9pbihvdXRkaXIsICdhbm92YV9mZWF0dXJlX2ltcG9ydGFuY2Vfd2l0aF9wdmFsdWVzLnBkZicpKQ0KICAgICAgICAgICAgcGx0LmNsb3NlKCkNCiAgICAgICAgDQogICAgcmV0dXJuIHNlbGVjdGVkX2ZlYXR1cmVzX3Jlc3VsdCA=').decode())
