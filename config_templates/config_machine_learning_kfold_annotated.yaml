# ═══════════════════════════════════════════════════════════════════════════
# K-Fold Cross-Validation Configuration Template
# ═══════════════════════════════════════════════════════════════════════════
#
# Based on actual code: habit/core/machine_learning/machine_learning_kfold.py
#
# Quick Start:
#   CLI:    habit kfold --config config/config_machine_learning_kfold.yaml
#   Script: python scripts/app_kfold_cv.py --config config/config_machine_learning_kfold.yaml
#
# ═══════════════════════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────────────────────
# Data Input (Same as standard ML config)
# ─────────────────────────────────────────────────────────────────────────
input:
  - path: ./ml_data/breast_cancer_dataset.csv
    name: clinical_
    subject_id_col: subjID
    label_col: label
    features:  # Empty = use all features

# ─────────────────────────────────────────────────────────────────────────
# Output Directory
# ─────────────────────────────────────────────────────────────────────────
output: ./ml_data/kfold_results

# ─────────────────────────────────────────────────────────────────────────
# K-Fold Cross-Validation Settings
# ─────────────────────────────────────────────────────────────────────────

# Number of folds
# Typical values: 5, 10
n_splits: 5

# Whether to use stratified k-fold
# Stratified preserves class distribution in each fold
stratified: true

# Random seed for reproducibility
random_state: 42

# ─────────────────────────────────────────────────────────────────────────
# Normalization (Same as standard ML config)
# ─────────────────────────────────────────────────────────────────────────
normalization:
  method: z_score
  # Other options: min_max, robust, max_abs, normalizer, quantile, power

# ─────────────────────────────────────────────────────────────────────────
# Feature Selection (Applied within each fold to avoid data leakage)
# ─────────────────────────────────────────────────────────────────────────
feature_selection_methods:
  - method: correlation
    params:
      threshold: 0.80
      method: spearman
      visualize: false
      before_z_score: false

# ─────────────────────────────────────────────────────────────────────────
# Model Configuration (Same as standard ML config)
# ─────────────────────────────────────────────────────────────────────────
models:
  LogisticRegression:
    params:
      random_state: 42
      max_iter: 1000
      C: 1.0
      penalty: l2
      solver: lbfgs
  
  RandomForest:
    params:
      random_state: 42
      n_estimators: 100
      max_depth: null
      max_features: sqrt
  
  XGBoost:
    params:
      random_state: 42
      n_estimators: 100
      max_depth: 3
      learning_rate: 0.1

  # Add more models as needed (same syntax as config_machine_learning.yaml)

# ─────────────────────────────────────────────────────────────────────────
# Visualization and Saving Configuration
# ─────────────────────────────────────────────────────────────────────────

# Generate visualization plots
# Includes ROC, DCA, calibration curves, confusion matrices
is_visualize: true

# Save trained models from each fold
# Can consume significant disk space
is_save_model: false

# Detailed visualization settings
visualization:
  enabled: true
  plot_types:
    - roc
    - calibration
    - confusion
    - dca

# ═══════════════════════════════════════════════════════════════════════════
# Output Files Generated
# ═══════════════════════════════════════════════════════════════════════════
#
# - aggregated_results.json: Mean ± std metrics across all folds
# - all_prediction_results.csv: Combined predictions from all folds
# - kfold_roc_curves.pdf: ROC curves for all models
# - kfold_calibration_curves.pdf: Calibration plots
# - kfold_dca_curves.pdf: Decision curve analysis
# - confusion_matrix_<model>.pdf: Per-model confusion matrices
# - fold_*/: Per-fold results
#
# ═══════════════════════════════════════════════════════════════════════════

