# ═══════════════════════════════════════════════════════════════════════════
# DICOM to NIfTI Conversion Configuration Template
# ═══════════════════════════════════════════════════════════════════════════
#
# Based on actual code: habit/utils/image_converter.py
#
# Quick Start:
#   CLI:    habit preprocess --config config/config_image_preprocessing_dcm2nii.yaml
#   Script: python scripts/app_image_preprocessing.py --config config/config_image_preprocessing_dcm2nii.yaml
#
# ═══════════════════════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────────────────────
# Data Paths
# ─────────────────────────────────────────────────────────────────────────

# Input configuration
# Can be a YAML file listing DICOM directories or a directory path
data_dir: ./config/image_files.yaml

# Output directory
out_dir: ./data/converted_nifti

# ─────────────────────────────────────────────────────────────────────────
# Preprocessing Pipeline
# ─────────────────────────────────────────────────────────────────────────

Preprocessing:
  
  # DICOM to NIfTI conversion
  dcm2nii:
    # Images to convert
    images: [T1, T2, DWI, ADC]
    
    # Path to dcm2niix executable
    # Download from: https://github.com/rordenlab/dcm2niix/releases
    dcm2niix_path: ./software/dcm2niix/dcm2niix.exe
    
    # Compress output (gzip)
    compress: true
    
    # Anonymize output (remove patient info)
    anonymize: false
    
    # Merge slices into 3D volumes
    # Options:
    #   "y" or "1": Default merge behavior (merge 2D slices)
    #   "2": Merge based on series (more aggressive, recommended for 3D output)
    #   "n" or "0": No merging (keep original structure)
    #   null: Don't specify, use dcm2niix default
    # For getting 3D instead of 4D: Use "2" or null
    merge_slices: "2"
    
    # Single file mode
    # Options:
    #   true: Force single file output (-s y) - may preserve 4D structure
    #   false: Allow multiple output files (-s n) - may split volumes
    #   null: Don't specify (recommended) - let dcm2niix decide best format
    # For getting 3D instead of 4D: Use null (don't specify)
    single_file_mode: null
  
  # Optional: Additional preprocessing steps after conversion
  # Can include any preprocessing methods from config_image_preprocessing.yaml
  
  # n4_correction:
  #   images: [T1, T2]
  #   num_fitting_levels: 4
  
  # resample:
  #   images: [T1, T2, DWI, ADC]
  #   target_spacing: [1.0, 1.0, 1.0]
  
  # registration:
  #   images: [T1, T2, DWI, ADC]
  #   fixed_image: T1
  #   moving_images: [T2, DWI, ADC]
  #   type_of_transform: SyNRA
  #   use_mask: false

# ─────────────────────────────────────────────────────────────────────────
# General Settings
# ─────────────────────────────────────────────────────────────────────────

# Number of parallel processes
processes: 1

# Random seed for reproducibility
random_state: 42

# ═══════════════════════════════════════════════════════════════════════════
# Notes
# ═══════════════════════════════════════════════════════════════════════════
#
# dcm2niix is required for DICOM conversion
# Download from: https://github.com/rordenlab/dcm2niix/releases
#
# Expected input structure (if data_dir is a directory):
#   data_dir/
#     ├── subject_001/
#     │   ├── T1_DICOM/
#     │   ├── T2_DICOM/
#     │   └── ...
#     └── subject_002/
#         └── ...
#
# Or use a YAML file (image_files.yaml) to specify exact DICOM directories
#
# ═══════════════════════════════════════════════════════════════════════════

